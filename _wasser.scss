$wasser-viewport-min: 320 !default;
$wasser-viewport-max: 1500 !default;
$wasser-scaling-ratio: 1.5 !default;
$wasser-scaling-ratio-font: 1.25 !default;
$wasser-font-size-to-line-height-ratio: $wasser-scaling-ratio !default;
$wasser-rem-factor: 16 !default;

/**
 * Basic wasser mixin, generates responsive property.
 * ---
 * @access public
 * ---
 * @param {string} $property - The property to be scaled
 * @param {number} $max — The max value for the property
 * @param {number|string} [$min] - The min value ot the property
 */
@mixin wasser($property, $max, $min: $max / $wasser-scaling-ratio) {
	@if type-of($max) != number {
		@error 'wasser: A number is expected as the second parameter.';
	}

	@include _getResponsiveProperty($max, $min, $property);
}

/**
 * Basic wasser mixin for responsive typography.
 * ---
 * @access public
 * ---
 * @param {number} $max — The max value for the property
 * @param {number|string} [$min] - The min value ot the property
 * @param {string} [$property] - The property, defaults to padding
 */
@mixin w-font($max, $min: ($max / $wasser-scaling-ratio-font), $line-height-ratio: $wasser-font-size-to-line-height-ratio) {
	@if type-of($max) != number {
		@error 'wasser: A number is expected as the first parameter.';
	}

	@include _getResponsiveProperty($max, $min, font-size);
	@include _getResponsiveProperty($max * $line-height-ratio, $min * $line-height-ratio, line-height);
}

@mixin _getResponsiveProperty($max, $min, $property) {
	$max: _wasser-strip-unit($max);
	$min: _wasser-strip-unit($min);

	$maxRem: _wasser-rem($max);
	$minRem: _wasser-rem($min);

	// This is where the magic happens ;)
	#{$property}: calc(#{$minRem} + (#{$max} - #{$min}) * (100vw - #{_wasser-rem($wasser-viewport-min)}) / (#{$wasser-viewport-max} - #{$wasser-viewport-min}));

	@media (min-width: #{_wasser-rem-breakpoint($wasser-viewport-max)}) {
		#{$property}: #{$maxRem};
	}

	@media (max-width: #{_wasser-rem-breakpoint($wasser-viewport-min - 1)}) {
		#{$property}: #{$minRem};
	}

	@media print {
		#{$property}: #{$maxRem};
	}
}

@function _wasser-rem($pixels) {
  @return $pixels / $wasser-rem-factor * 1rem;
}

// html font-size change doesn't apply to breakpoints.
@function _wasser-rem-breakpoint($pixels) {
  @return $pixels / 16 * 1rem;
}

@function _wasser-strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}
